include ./element.pug

include ./icons/solid/lockClosed.pug
include ./icons/solid/mail.pug
include ./icons/solid/search.pug


mixin form
  form(class="flex flex-col gap-y-12")&attributes(attributes)
    block

mixin fieldset
  fieldset(class="flex flex-col gap-y-6")&attributes(attributes)
    if attributes.legend
      legend(class="sr-only")= attributes.legend
    block

mixin fieldsetHeading
  h4(class="text-base font-medium text-ink")
    block

mixin fieldsetSubheading
  p(class="text-sm leading-5 text-ink-lighter")
    block

mixin label
  label.text-sm.font-normal.block(class="label")&attributes(attributes)
    block

mixin field
  - const { orientation = "vertical" } = attributes;
  case orientation
    when "vertical"
      div(class="flex flex-col gap-y-1")&attributes(attributes)
        block
    when "horizontal"
      div(class="flex gap-x-2")&attributes(attributes)
        block

mixin fieldDescription
  div&attributes(attributes)
    block

mixin inputGroup(tagName = "div")
  -
    const { size = 'medium', tags = [], ...attrs } = attributes;

    const base = [
      'flex',
      'gap-x-2',
      'border',
      'border-sky-dark',
      'disabled:bg-sky-light',
      'w-full',
      'hover:border-ink-lightest',
      'focus-within:border-blue',
      'focus-within:hover:border-blue',
      'focus:outline-0',
      'items-center'
    ];

    let disabled = [];

    if (attributes.disabled) {
      disabled = [
        'bg-sky-light',
        'cursor-not-allowed'
      ];
    }

    const sizes = {
      small: [
        'h-10',
        'px-2',
        'rounded-md',
        'text-sm'
      ],
      medium: [
        'h-12',
        'px-3',
        'rounded-lg',
      ]
    };

    const classNames = [...base, ...disabled, ...sizes[size]].sort();

  +element(tagName)(class=classNames)&attributes(attrs)
    block
    each tag in tags
      +tag= tag

mixin input(tagName = "input")
  -
    const { size = 'medium', ...attrs } = attributes;

    const base = [
      'focus:outline-0',
      'border-0',
      'bg-transparent',
      'disabled:bg-transparent',
      'disabled:cursor-not-allowed',
      'grow-1',
      'w-full',
    ];

    const sizes = {
      small: [
        'h-5',
        'text-sm'
      ],
      medium: [
        'h-6',
      ]
    };

    const classNames = [...base, ...sizes[size]].sort();

  +element(tagName)(class=classNames id=(attrs.id || attrs.name))&attributes(attrs)
    block

mixin select
  +inputGroup&attributes(attributes)
    +input("select")&attributes(attributes)
      block

mixin option
  option&attributes(attributes)
    block

mixin emailInput
  - const { size, tags } = attributes;

  +inputGroup&attributes({ size, tags })
    +mailSolidIcon.text-ink-lightest.shrink-0
    +input(type="email")&attributes(attributes)

mixin passwordInput
  - const { size, tags } = attributes;

  +inputGroup&attributes({ size, tags })
    +lockClosedSolidIcon.text-ink-lightest.shrink-0
    +input(type="password")&attributes(attributes)

mixin searchInput
  - const { size, tags } = attributes;

  +inputGroup&attributes({ size, tags })
    +searchSolidIcon.text-ink-lightest.shrink-0
    +input(type="search")&attributes(attributes)

mixin textInput
  - const { size, tags } = attributes;

  +inputGroup&attributes({ size, tags })
    +input(type="text")&attributes(attributes)

mixin radioInput
  +input(type="radio")&attributes(attributes)

mixin checkboxInput
  +input(type="checkbox")&attributes(attributes)

mixin inputField
  +field
    if attributes.label
      +label(for=(attributes.id || attributes.name))= attributes.label
    block

mixin emailInputField
  +inputField&attributes(attributes)
    +emailInput&attributes(attributes)

mixin passwordInputField
  +inputField&attributes(attributes)
    +passwordInput&attributes(attributes)

mixin searchInputField
  +inputField&attributes(attributes)
    +searchInput&attributes(attributes)

mixin textInputField
  +inputField&attributes(attributes)
    +textInput&attributes(attributes)

mixin radioInputField
  +field(orientation="horizontal")
    +radioInput&attributes(attributes)
    div
      +label(for=attributes.id)= attributes.label
      +fieldDescription= attributes.description

mixin checkboxInputField
  +field(orientation="horizontal")
    +checkboxInput&attributes(attributes)
    div
      +label(for=attributes.id)= attributes.label
      +fieldDescription= attributes.description

mixin selectField
  +field
    +label(for=attributes.id)= attributes.label
    +select&attributes(attributes)
      block
